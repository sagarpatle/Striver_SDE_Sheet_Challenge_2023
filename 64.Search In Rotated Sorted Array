#include<bits/stdc++.h>
using namespace std;

int minElementIndex(int *arr,int n) {
    int start=0,end=n-1;
    if(arr[start]<arr[end]) {
        return start;
    }
    while(start<=end) {
        if(arr[start]<=arr[end]) {
            return start;
        }
        int mid=start+(end-start)/2;
        bool f=(mid>0 && mid+1<n && arr[mid]<arr[mid+1] && arr[mid]<arr[mid-1]);
        bool s=(mid==0 && mid+1<n && arr[mid]<arr[mid+1]);
        bool t=(mid==n-1 && mid>0 && arr[mid]<arr[mid-1]);
        if(f || s || t) {
            return mid;
        }
        else if(arr[mid]>=arr[start]) {
            start=mid+1;
        }
        else {
            end=mid-1;
        }
    }
    return 0;
}

int binarySearch(int *arr,int x,int start,int end) {
    while(start<=end) {
        int mid=start+(end-start)/2;
        if(arr[mid]==x) {
            return mid;
        }
        else if(arr[mid]>x) {
            end=mid-1;
        }
        else {
            start=mid+1;
        }
    }
    return -1;
}

int search(int* arr, int n, int key) {
    int idx=minElementIndex(arr,n);
    int right=binarySearch(arr,key,idx,n-1);
    int left=binarySearch(arr,key,0,idx-1);
    if(right!=-1) {
        return right;
    }
    if(left!=-1) {
        return left;
    }
    return -1;
}
