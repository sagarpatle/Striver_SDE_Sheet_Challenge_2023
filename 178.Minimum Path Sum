#include <bits/stdc++.h> 

int minSumPath(vector<vector<int>> &grid) {
   int n = grid.size();
   int m = grid[0].size();
   for(int i=1;i<n;i++){
       grid[i][0] = grid[i-1][0]+grid[i][0]; //used to store values of 1st column
       
   }
   for(int i=1;i<m;i++){
       grid[0][i] = grid[0][i-1]+grid[0][i];  // used to store values for 1st row.
   }
   for(int i=1;i<n;i++){
       for(int j=1;j<m;j++){
          int left = grid[i][j-1]+grid[i][j]; //value of grid if it comes right.
          int up = grid[i-1][j]+grid[i][j]; //value of grid if it comes down 
           grid[i][j] = min(left,up); //minimum of the 2 to get the desired value at the grid position.
       }
   }
   return grid[n-1][m-1]; // the minimum value at bottom right is stored here.
}
